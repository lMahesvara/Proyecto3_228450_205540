package guis;

import entidades.Usuario;
import eventos.EventLogin;
import eventos.PublicEvent;
import excepciones.NegocioException;
import interfaces.INegocioFachada;
import javax.swing.JOptionPane;

public class Login extends javax.swing.JPanel {

    private INegocioFachada negFac;
    private Login login;
    public Login(INegocioFachada negFac) {
        initComponents();
        this.negFac = negFac;
        this.login=this;
        init();
    }
    
    private void init(){
        slide.setAnimate(10);
        PublicEvent.getInstance().addEventLogin(new EventLogin() {
            @Override
            public boolean login(String telefono, String password) {
                Usuario usuario = null;
                try {
                    usuario = negFac.consultarUsuario(telefono);
                } catch (NegocioException ex) {
                    JOptionPane.showMessageDialog(login, ex.getMessage(), "Información", JOptionPane.ERROR_MESSAGE);
                }
                try {
                    if(usuario != null && negFac.compararPasswords(usuario.getPassword(), password)){
                        PublicEvent.getInstance().getEventMain().initChat(usuario);
                        return true;
                    }
                    JOptionPane.showMessageDialog(login,"Las credenciales no son válidas.", "Información inválida", JOptionPane.ERROR_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(login, ex.getMessage(), "Información inválida", JOptionPane.ERROR_MESSAGE);
                } 
                return false;
            }

            @Override
            public boolean register(Usuario usuario){
                
                try{
                    Usuario exist=negFac.consultarUsuario(usuario.getTelefono());
                    Usuario existName=negFac.consultarPorUsername(usuario.getUsername());
                    if(exist==null){
                        if(existName==null){
                        negFac.agregarUsuario(usuario);
                        JOptionPane.showMessageDialog(login, "El usuario se registro correctamente.", "Usuario agregado", JOptionPane.INFORMATION_MESSAGE);
                        slide.show(0);
                        return true;
                        }else{
                            JOptionPane.showMessageDialog(login, "El nombre del usuario ya existe.", "Usuario repetido", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }else{
                        JOptionPane.showMessageDialog(login, "El telefono del usuario ya existe.", "Usuario repetido", JOptionPane.INFORMATION_MESSAGE);
                    }
                    
                    
                    
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(login, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
                return false;
            }

            @Override
            public void goRegister() {
               slide.show(1);
            }

            @Override
            public void goLogin() {
               slide.show(0);
            }
        });
   
        
        P_Login login=new P_Login();
        P_Register register=new P_Register();
        slide.init(login,register);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pbLogo = new swingComponents.PictureBox();
        bottomLabel = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        wrapPanel = new javax.swing.JPanel();
        slide = new swingComponents.PanelSlide();

        setBackground(new java.awt.Color(32, 44, 51));

        pbLogo.setImage(new javax.swing.ImageIcon(getClass().getResource("/iconos/whatsappMirror.png"))); // NOI18N

        bottomLabel.setBackground(new java.awt.Color(0, 168, 132));
        bottomLabel.setOpaque(true);

        bottomPanel.setBackground(new java.awt.Color(0, 168, 132));

        wrapPanel.setBackground(new java.awt.Color(32, 44, 51));

        slide.setBackground(new java.awt.Color(32, 44, 51));

        javax.swing.GroupLayout slideLayout = new javax.swing.GroupLayout(slide);
        slide.setLayout(slideLayout);
        slideLayout.setHorizontalGroup(
            slideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
        );
        slideLayout.setVerticalGroup(
            slideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 508, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout wrapPanelLayout = new javax.swing.GroupLayout(wrapPanel);
        wrapPanel.setLayout(wrapPanelLayout);
        wrapPanelLayout.setHorizontalGroup(
            wrapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wrapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        wrapPanelLayout.setVerticalGroup(
            wrapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wrapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(wrapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(8, 8, 8))
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(wrapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bottomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(pbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(32, Short.MAX_VALUE)
                        .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(pbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(bottomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bottomLabel;
    private javax.swing.JPanel bottomPanel;
    private swingComponents.PictureBox pbLogo;
    private swingComponents.PanelSlide slide;
    private javax.swing.JPanel wrapPanel;
    // End of variables declaration//GEN-END:variables
}
